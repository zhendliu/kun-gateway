apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kun-gateway-dataplane
  namespace: kube-system
  labels:
    app: kun-gateway
    component: dataplane
spec:
  selector:
    matchLabels:
      app: kun-gateway
      component: dataplane
  template:
    metadata:
      labels:
        app: kun-gateway
        component: dataplane
    spec:
      hostNetwork: true  # 共享宿主机网络
      containers:
      - name: dataplane
        image: kun-gateway:latest
        command: ["./dataplane"]
        args:
        - "--port=80"
        - "--https-port=443"
        - "--api-port=8080"
        - "--log-level=info"
        - "--cert-dir=/etc/ssl/certs"
        ports:
        - name: http
          containerPort: 80
          hostPort: 80  # 监听宿主机80端口
        - name: https
          containerPort: 443
          hostPort: 443  # 监听宿主机443端口
        - name: api
          containerPort: 8080
          hostPort: 8080
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN  # 需要网络管理权限
      volumes:
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
          type: Directory
      serviceAccountName: kun-gateway-dataplane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kun-gateway-dataplane
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kun-gateway-dataplane
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kun-gateway-dataplane
subjects:
- kind: ServiceAccount
  name: kun-gateway-dataplane
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kun-gateway-dataplane
  apiGroup: rbac.authorization.k8s.io 